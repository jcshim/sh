Encoder(
  (enc): Sequential(
    (0): Conv2d(3, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.2, inplace)
    (2): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
    (5): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (6): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (7): LeakyReLU(negative_slope=0.2, inplace)
    (8): Conv2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (9): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (10): LeakyReLU(negative_slope=0.2, inplace)
    (11): Conv2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (12): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): LeakyReLU(negative_slope=0.2, inplace)
    (14): Conv2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (15): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (16): LeakyReLU(negative_slope=0.2, inplace)
    (17): Conv2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (18): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (19): LeakyReLU(negative_slope=0.2, inplace)
    (20): Conv2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
  )
  (fc): Sequential(
    (0): Linear(in_features=256, out_features=856, bias=True)
  )
)

Decoder(
  (fc): Sequential(
    (0): Linear(in_features=856, out_features=256, bias=True)
    (1): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_1): Sequential(
    (0): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_2): Sequential(
    (0): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_3): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_4): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_5): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_6): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_7): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (pred_8): Sequential(
    (0): Conv2d(32, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (deconv_8): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
)

Decoder(
  (fc): Sequential(
    (0): Linear(in_features=600, out_features=256, bias=True)
    (1): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_1): Sequential(
    (0): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_2): Sequential(
    (0): ConvTranspose2d(256, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_3): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_4): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_5): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_6): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (deconv_7): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
  (pred_8): Sequential(
    (0): Conv2d(32, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (deconv_8): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): ReflectionPad2d((1, 1, 1, 1))
    (2): Conv2d(64, 32, kernel_size=(3, 3), stride=(1, 1))
    (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.2, inplace)
  )
)